// <auto-generated />
using ChecklistBot.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace ChecklistBot.DataAccess.Migrations
{
    [DbContext(typeof(ChecklistBotContext))]
    partial class ChecklistBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("ChecklistBot.DataAccess.Entities.CheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CreationCompleted");

                    b.Property<string>("Name");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("CheckList");
                });

            modelBuilder.Entity("ChecklistBot.DataAccess.Entities.CheckListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CheckListId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.ToTable("CheckListItem");
                });

            modelBuilder.Entity("ChecklistBot.DataAccess.Entities.WorkCheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CheckListId");

                    b.Property<string>("InlineMessageId");

                    b.Property<int>("MessageId");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.ToTable("WorkCheckList");
                });

            modelBuilder.Entity("ChecklistBot.DataAccess.Entities.WorkCheckListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CheckListItemId");

                    b.Property<bool>("IsCompleted");

                    b.Property<int>("WorkCheckListId");

                    b.HasKey("Id");

                    b.HasIndex("CheckListItemId");

                    b.HasIndex("WorkCheckListId");

                    b.ToTable("WorkCheckListItem");
                });

            modelBuilder.Entity("ChecklistBot.DataAccess.Entities.CheckListItem", b =>
                {
                    b.HasOne("ChecklistBot.DataAccess.Entities.CheckList", "CheckList")
                        .WithMany("CheckListItems")
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ChecklistBot.DataAccess.Entities.WorkCheckList", b =>
                {
                    b.HasOne("ChecklistBot.DataAccess.Entities.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ChecklistBot.DataAccess.Entities.WorkCheckListItem", b =>
                {
                    b.HasOne("ChecklistBot.DataAccess.Entities.CheckListItem", "CheckListItem")
                        .WithMany()
                        .HasForeignKey("CheckListItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ChecklistBot.DataAccess.Entities.WorkCheckList", "WorkCheckList")
                        .WithMany("WorkCheckListItems")
                        .HasForeignKey("WorkCheckListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
